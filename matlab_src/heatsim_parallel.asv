close all;
clc;

tic

initTempRange = 15:5:25;
finalTempRange = 80:5:100;
riseTempRange = 10:5:40;
specificHeatRange = [921];
thermalConductivityRange = [150];
massDensityRange = [2.70*1000];

iteration_array = cell(length(initTempRange), length(finalTempRange), length(riseTempRange), length(specificHeatRange), length(thermalConductivityRange), length(massDensityRange));
iterations = size(iteration_array);


for rad = 0.5:0.25:1.25    
    
    thermalmodelT = createpde('thermal','transient');
    
    air = rad + 0.05;
    %define the shape of the 'air'
    r1 = [-air air air -air -air -air air air];
    r1 = [3 4 r1./100]';
    %define the shape of the 2d sqaure representing a cylinder
    r2 = [-rad rad rad -rad  -rad -rad rad rad];
    r2 = [3 4 r2./100]';
    gm = [r1,r2];
    sf = 'r1+r2'; %add the shapes together
    ns = char('r1','r2');
    ns = ns';
    [dl,bt] = decsg(gm,sf,ns);
    geometryFromEdges(thermalmodelT,dl); %thermal model is now a
    
    parfor (i = 1:prod(iterations))
        
        [initTempIter, finalTempIter, riseTempIter, specHeatIter, thermCondIter, massDensIter] = ind2sub(iterations,i);
        inittemp = initTempRange(initTempIter);
        risetemp = riseTempRange(riseTempIter);
        finaltemp = finalTempRange(finalTempIter);
        thermalConductivity = thermalConductivityRange(thermCondIter);
        massDensity = massDensityRange(massDensIter);
        specificHeat = specificHeatRange(specHeatIter);
        
        
        thermalProperties(thermalmodelT,'Face',1,'ThermalConductivity',25.72/1000,... %W/m K
            'MassDensity',1.2041 ,... %kg/m^3
            'SpecificHeat', 0.718/1000); %J/(kmol*K)
        thermalProperties(thermalmodelT,'Face',2,'ThermalConductivity',thermalConductivity,... %W/m K
            'MassDensity',massDensity,... %kg/m^3
            'SpecificHeat',specificHeat); %J/(kg k)
        transientBCHeatedBlockParallel(thermalmodelT, 'Edge', [2,1,7,6], 'Temperature', inittemp, risetemp, finaltemp)
        msh= generateMesh(thermalmodelT,'Hmax',0.001);
        %             figure
        %             pdeplot(thermalmodelT);
        %             axis equal
        %             title 'Block With Finite Element Mesh Displayed'
        
        tlist = 0:1:(60*60);
        thermalIC(thermalmodelT,inittemp);
        R = solve(thermalmodelT,tlist);
        T = R.Temperature;
        
        getClosestNode = @(p,x,y) min((p(1,:) - x).^2 + (p(2,:) - y).^2);
        
        [~,nid] = getClosestNode( msh.Nodes, 0, 0 );
        [~,nid2] = getClosestNode( msh.Nodes, 1.5,1.5);
        
        centerT = T(nid,:);
        outT = T(nid2,:);
        specificHeatCSV = zeros(length(tlist),1) + specificHeat;
        thermalConductivityCSV = zeros(length(tlist),1) + thermalConductivity;
        massDensityCSV = zeros(length(tlist)
        
        csvName = sprintf("temps%d%d%d.csv", inittemp,risetemp,finaltemp)
        csvMat = [tlist', outT', centerT'];
        writematrix(csvMat,csvName);
        
        %     save(Namecenter,'centerT')
        %     save(Nameouter, 'outT')
    end
end
toc